import board
import neopixel
import time
import random
num_pixels = 10
np = neopixel.NeoPixel(board.NEOPIXEL, num_pixels, brightness=1, auto_write=False)


orange = (255, 116, 0)
purple = (176, 0, 188)
green = (0, 116, 0)
red = (255, 0, 0)
white = (255, 255, 255)


'''

Function: fade_in
Description: User inputs a color and the function will repeatedly increase the color values until it reaches the desired color

Parameters: color:  

Return value: N/A

'''

def fade_in(color, delay=0.01):
    mon = color
    start = (0, 0, 0)
    mx = max(mon[0], max(mon[1], mon[2]))
    r, g, b = start
    while r < mon[0] and g < mon[1] and b < mon[2]:
        r += mon[0]/mx
        g += mon[1]/mx
        b += mon[2]/mx
        np.fill((int(r), int(g), int(b)))
        print("r-{}, g - {}, b -{}".format(int(r), int(g), int(b)))
        np.show()
        time.sleep(delay)

'''

Function: fade_out
Description: Fades to black (off) from any color the neopixels are set to

Parameters: color - tuple, delay - float

Return value: N/A

'''

def fade_out(rgb, delay=0.1):
   mx = max(rgb[0], max(rgb[1], rgb[2]))
   r_inc = rgb[0] / mx
   g_inc = rgb[1] / mx
   b_inc = rgb[2] / mx
   r, g, b = rgb
   while r >= 0 and g >= 0 and b >= 0:
       r_inc = rgb[0] / mx
       g_inc = rgb[1] / mx
       b_inc = rgb[2] / mx
       r -= r_inc
       g -= g_inc
       b -= b_inc
       np.fill((int(r), int(g), int(b)))
       np.show()
       time.sleep(delay)
   
   
'''

Function: sparkle
Description: User inputs one color and the function will turn all of the pixels to that color and the second color the user inputs will be the color that randomly pops up on the board

Parameters: color1 - tuple , color2- tuple, delay - float 

Return value: N/A

'''


def sparkle(color1, color2, delay):
   np.fill(color1)
   for i in range(4):
       np[random.randint(0, 9)] = color2
   np.show()
   time.sleep(delay)


'''

Function: chase
Description: User inputs 2 colors one of which will be the main color that the pixels will be set to and the second color is the one that will run around the neopixel

Parameters: color1 - tuple , color2- tuple, loop - int, count - int,  delay - float   

Return value: N/A

'''
def chase(color1, color2, loop = 20, count=3, delay=0.1):
   result = 0
   for outer in range(count*loop):
       np.fill(color1)
       for i in range(num_pixels):
           if i % count == result:
               np[i] = color2
       np.show()
       time.sleep(delay)
       result+=1
       result %= count


'''

Function: fire
Description: Sets one color input form the user as the background and the other color as the flame that will randomly pop up on the board

Parameters: background - tuple , foreground- tuple

Return value: N/A

'''
def fire(background, foreground):
    for j in range(100):
       intensity = random.random() * 0.7 + 0.3
       i_background = [int(i * intensity) for i in background]
       np.fill(i_background)
       for i in range(random.randint(2, int(num_pixels/5))):
           intensity = random.random() * 0.7 + 0.3
           i_foreground = [int(i * intensity) for i in foreground]
           np[random.randint(0, num_pixels-1)] = i_foreground
       np.show()
       time.sleep(0.06)


while True:

   fade_in((194, 2, 255), 0.02)
   chase(purple, green, count=3, loop=20, delay=0.10)
   for i in range (60):
       sparkle(red, purple,0.1)

   fire((255, 91, 0), (255, 0, 0))
   np.fill((0, 0, 0))
   np.show()
   fade_in((255, 20, 0))
   fade_out((194, 2, 255), 0.02)

